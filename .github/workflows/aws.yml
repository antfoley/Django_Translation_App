name: Deploy to AWS EC2

on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      AWS_INSTANCE_SG_ID: ${{ secrets.AWS_INSTANCE_SG_ID }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Get runner IP address
      id: ip
      uses: haythem/public-ip@v1.2
    
    - name: Whitelist runner IP address
      run: |
        aws ec2 authorize-security-group-ingress \
          --group-id $AWS_INSTANCE_SG_ID \
          --protocol tcp \
          --port 22 \
          --cidr ${{ steps.ip.outputs.ipv4 }}/32
    
    - name: Check connection to EC2
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          echo "Connection successful"
        timeout: 2m

    - name: Pull latest code on EC2
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          cd Django_Translation_App
          git pull || exit 1
        timeout: 5m

    - name: Execute deployment script on EC2
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
            cd /home/${{ secrets.EC2_USER }}/Django_Translation_App
            sudo apt update
            sudo apt install -y python3-venv  
            python3 -m venv venv
            source venv/bin/activate
            python -m pip install --upgrade pip
            pip install -r requirements.txt
            python manage.py makemigrations
            python manage.py migrate
            nohup python manage.py runserver 0.0.0.0:8000 &

    - name: Revoke runner IP address
      if: always()
      run: |
        aws ec2 revoke-security-group-ingress \
          --group-id $AWS_INSTANCE_SG_ID \
          --protocol tcp \
          --port 22 \
          --cidr ${{ steps.ip.outputs.ipv4 }}/32