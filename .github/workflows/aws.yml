name: Deploy to EC2 with Docker Swarm

on:
  push:
    branches:
      - main  # Triggers on push to the main branch

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      AWS_INSTANCE_SG_ID: ${{ secrets.AWS_INSTANCE_SG_ID }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Get runner IP address
        id: ip
        uses: haythem/public-ip@v1.2

      - name: Whitelist runner IP address
        run: |
          aws ec2 authorize-security-group-ingress \
            --group-id $AWS_INSTANCE_SG_ID \
            --protocol tcp \
            --port 22 \
            --cidr ${{ steps.ip.outputs.ipv4 }}/32

      - name: Verify whitelisted IP address
        run: |
          aws ec2 describe-security-groups --group-ids $AWS_INSTANCE_SG_ID

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
  
      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: create JSON key file
        run: |
          echo "${{ secrets.GOOGLE_CLOUD_CREDENTIALS }}" > translation_app/booming-post-404017-49309d69296e.json

      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/django-translation-app:latest .
        
      - name: Initialize Docker Swarm
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > key.pem && chmod 600 key.pem << 'EOF'
          ssh -i key.pem -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}
          sudo docker swarm init || echo 'Swarm already initialized'
          EOF

      - name: Create Docker Secret
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > key.pem && chmod 600 key.pem << 'EOF'
          ssh -i key.pem -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "
            echo "${{ secrets.GOOGLE_CLOUD_CREDENTIALS }}" | docker secret create google_cloud_credentials -"
          EOF

      - name: Deploy to Docker Swarm
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > key.pem && chmod 600 key.pem << 'EOF'
          ssh -i key.pem -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} 
          sudo docker stack rm my_stack || echo 'No stack to remove'
          sudo docker stack deploy -c ./docker-compose.yml my_stack
          EOF  

      - name: Revoke runner IP address
        if: always()
        run: |
          aws ec2 revoke-security-group-ingress \
            --group-id $AWS_INSTANCE_SG_ID \
            --protocol tcp \
            --port 22 \
            --cidr ${{ steps.ip.outputs.ipv4 }}/32
