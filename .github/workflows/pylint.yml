name: Pylint

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: False
      matrix:
        python-version: [3.7, 3.8, 3.9]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pylint
    - name: Analysing the code with pylint
      run: |
        # Array of pylint disable arguments
        disable_args="--disable=C0111,R0903,W0718"  # Add your disable codes here
        
        # Directories and files to ignore
        ignore_dirs="--ignore=templatetags,migrations,staticfiles"
        
        # Run pylint and capture the output, ignoring certain directories
        pylint_output=$(pylint $disable_args $ignore_dirs $(git ls-files '*.py') 2>&1)
        pylint_exit_code=$?
        
        # Print pylint output for debugging
        echo "$pylint_output"
        
        # Check the overall pylint exit code
        if [ $pylint_exit_code -ne 0 ]; then
            echo "pylint found issues. Please fix the linting errors."
            exit 1  # Fail the workflow if there are linting issues
        fi
        
        echo "pylint passed without any issues."
